name: Tests for SpeckCn2

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
    types:
      - opened
      - reopened
      - synchronize
      - ready_for_review
  workflow_dispatch:

jobs:
  Build-n-test:

    if: github.event.pull_request.draft == false
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ['3.9', '3.10']
        toolchain:
          - {compiler: gcc, version: 13}

    steps:
    - uses: actions/checkout@v3
      with:
        submodules: 'true'

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}

    - uses: actions/cache@v3
      id: cache-virtualenv
      with:
        path: ${{ env.pythonLocation }}
        key: ${{ env.pythonLocation }}-${{ hashFiles('pyproject.toml') }}

    - name: Install dependencies
      if: steps.cache-virtualenv.outputs.cache-hit != 'true'
      run: |
        python -m pip install --upgrade pip
        python -m pip install -e .[develop]

    - name: Test with pytest
      run: |
          coverage run -p -m pytest

    - name: Upload test images
      if: always()
      uses: actions/upload-artifact@v2
      with:
        name: test-images
        path: .tests/image_diff/

    - name: Combine
      run: |
        coverage combine

    - name: Report coverage
      run: |
        coverage json
        export TOTAL=$(python -c "import json;print(json.load(open('coverage.json'))['totals']['percent_covered_display'])")
        echo "total=$TOTAL" >> $GITHUB_ENV
        echo "### Total coverage: ${TOTAL}%" >> $GITHUB_STEP_SUMMARY
        echo $'\n```' >> $GITHUB_STEP_SUMMARY
        coverage report >> $GITHUB_STEP_SUMMARY
        echo $'\n```' >> $GITHUB_STEP_SUMMARY

    - name: Make coverage badge
      if: github.ref == 'refs/heads/main'
      uses: schneegans/dynamic-badges-action@v1.7.0
      with:
        auth: ${{ secrets.GIST_SECRET }}
        gistID: ee30d5a40792fc1de92e9dcf0d0e092a
        filename: covbadge.json
        label: Coverage
        message: ${{ env.total }}%
        minColorRange: 50
        maxColorRange: 90
        valColorRange: ${{ env.total }}
