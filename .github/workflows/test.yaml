name: Test

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  Build-n-test:

    if: github.event.pull_request.draft == false
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ['3.9', '3.10', '3.11']
        toolchain:
          - {compiler: gcc, version: 13}

    steps:
    - uses: actions/checkout@v2

    - uses: fortran-lang/setup-fortran@v1
      id: setup-fortran
      with:
        compiler: ${{ matrix.toolchain.compiler }}
        version: ${{ matrix.toolchain.version }}

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}

    - name: Automatic requirements.txt for Python Project
      uses: ryan-rozario/pipreqs-action@master
      with:
        PROJECT_PATH: speckcn2
        REQUIREMENT_PATH: requirements.txt

    - name: Cache dependencies
      uses: actions/cache@v2
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install --config-settings "setup-args=-Dblas=blas" --config-settings "setup-args=-Dlapack=lapack" scipy
        python -m pip install git+https://github.com/AMLab-Amsterdam/lie_learn
        python -m pip install --ignore-installed git+https://github.com/QUVA-Lab/escnn
        pip install --ignore-installed -r requirements.txt

    - name: Test with pytest
      run: |
          pip install pytest coverage
          coverage run -p -m pytest

    - name: Combine
      run: |
        coverage combine

    - name: Report coverage
      run: |
        coverage json
        export TOTAL=$(python -c "import json;print(json.load(open('coverage.json'))['totals']['percent_covered_display'])")
        echo "total=$TOTAL" >> $GITHUB_ENV
        echo "### Total coverage: ${TOTAL}%" >> $GITHUB_STEP_SUMMARY
        echo $'\n```' >> $GITHUB_STEP_SUMMARY
        coverage report >> $GITHUB_STEP_SUMMARY
        echo $'\n```' >> $GITHUB_STEP_SUMMARY

    - name: Make coverage badge
      if: github.ref == 'refs/heads/main'
      uses: schneegans/dynamic-badges-action@v1.6.0
      with:
        auth: ${{ secrets.GIST_SECRET }}
        gistID: ee30d5a40792fc1de92e9dcf0d0e092a
        filename: covbadge.json
        label: Coverage
        message: ${{ env.total }}%
        minColorRange: 50
        maxColorRange: 90
        valColorRange: ${{ env.total }}
